from z3 import *
v4  = BitVec('v4', 32)
v5  = BitVec('v5', 32)
v6  = BitVec('v6', 32)
v7  = BitVec('v7', 32)
v8  = BitVec('v8', 32)
v9  = BitVec('v9', 32)
v10 = BitVec('v10', 32)
v11 = BitVec('v11', 32)
v12 = BitVec('v12', 32)
v13 = BitVec('v13', 32)
v14 = BitVec('v14', 32)
v15 = BitVec('v15', 32)
v16 = BitVec('v16', 32)
v17 = BitVec('v17', 32)
v18 = BitVec('v18', 32)
v19 = BitVec('v19', 32)
v20 = BitVec('v20', 32)
v21 = BitVec('v21', 32)
v22 = BitVec('v22', 32)
v23 = BitVec('v23', 32)
v24 = BitVec('v24', 32)
v25 = BitVec('v25', 32)
v26 = BitVec('v26', 32)
v27 = BitVec('v27', 32)
v28 = BitVec('v28', 32)
v29 = BitVec('v29', 32)
v30 = BitVec('v30', 32)
v31 = BitVec('v31', 32)
v32 = BitVec('v32', 32)
v33 = BitVec('v33', 32)
v34 = BitVec('v34', 32)
v35 = BitVec('v35', 32)
v36 = BitVec('v36', 32)
v37 = BitVec('v37', 32)
v38 = BitVec('v38', 32)
v39 = BitVec('v39', 32)
v40 = BitVec('v40', 32)

solver = Solver()

solver.add(988 * v39 + 809 * v36 + 1020 * v35 + 381 * v34 + 152 * v33 + 990 * v32 + 655 * v31 + 328 * v30 + 665 * v29 + 541 * v28 + 313 * v27 + 711 * v26 + 748 * v25 + v24 + 957 * v23 + 752 * v22 + 527 * v21 + 988 * v18 + 712 * v17 + 53 * v16 + 532 * v15 + 879 * v14 + 880 * v13 + 674 * v12 + 530 * v11 + 486 * v10 + 412 * v9 + 179 * v8 + 76 * v7 + 853 * v6 + 656 * v5 + 29 * v4 + 616 * v19 + 9 * v20 + 210 * v37 + 72 * v38 + 622 * v40 == 2105301)
solver.add(634 * v39 + 315 * v38 + 147 * v37 + 285 * v36 + 924 * v35 + 898 * v34 + 815 * v33 + 366 * v32 + 276 * v31 + 851 * v30 + 294 * v29 + 66 * v28 + 42 * v27 + 298 * v26 + 709 * v25 + 914 * v24 + 331 * v23 + 54 * v22 + 586 * v21 + 690 * v20 + 536 * v19 + 272 * v18 + 1003 * v17 + 812 * v16 + 271 * v15 + 46 * v14 + 60 * v13 + 37 * v11 + 804 * v9 + 349 * v8 + 414 * v7 + 272 * v6 + 494 * v5 + 558 * v4 + 467 * v10 + 768 * v12 + 951 * v40 == 1859225)
solver.add(616 * v39 + 422 * v38 + 871 * v37 + 921 * v36 + 604 * v35 + 175 * v34 + 249 * v33 + 845 * v32 + 247 * v31 + 639 * v30 + 530 * v29 + 100 * v28 + 353 * v27 + 630 * v26 + 226 * v25 + 562 * v24 + 264 * v23 + 973 * v22 + 734 * v21 + 994 * v20 + 907 * v19 + 692 * v18 + 696 * v17 + 197 * v16 + 802 * v15 + 364 * v14 + 143 * v13 + 216 * v12 + 698 * v11 + 631 * v10 + 967 * v9 + 718 * v8 + 842 * v7 + 696 * v6 + 672 * v5 + 782 * v4 + 814 * v40 == 2277911)
solver.add(377 * v39 + 723 * v38 + 596 * v37 + 746 * v36 + 550 * v35 + 589 * v34 + 456 * v33 + 521 * v32 + 799 * v31 + 864 * v30 + 98 * v29 + 952 * v28 + 967 * v27 + 518 * v26 + 777 * v25 + 717 * v24 + 697 * v23 + 529 * v22 + 78 * v21 + 166 * v20 + 429 * v19 + 749 * v18 + 560 * v17 + 203 * v16 + 187 * v15 + 296 * v14 + 253 * v13 + 476 * v12 + 326 * v11 + 370 * v10 + 808 * v9 + 654 * v8 + 173 * v7 + 29 * v4 + 290 * v5 + 6 * v6 + 380 * v40 == 1919896)
solver.add(536 * v39 + 109 * v38 + 292 * v37 + 560 * v36 + 810 * v35 + 459 * v34 + 880 * v33 + 740 * v32 + 78 * v31 + 503 * v30 + 16 * v29 + 506 * v28 + 781 * v27 + 490 * v26 + 941 * v25 + 324 * v24 + 993 * v23 + 142 * v22 + 484 * v21 + 894 * v20 + 214 * v19 + 541 * v18 + 376 * v17 + 461 * v16 + 847 * v15 + 703 * v14 + 955 * v13 + 769 * v12 + 536 * v11 + 526 * v10 + 323 * v7 + 857 * v6 + 703 * v5 + 70 * v4 + 1000 * v8 + 20 * v9 + 312 * v40 == 2102454)
solver.add(171 * v39 + 240 * v38 + 958 * v37 + 443 * v36 + 697 * v35 + 901 * v34 + 395 * v33 + 61 * v32 + 589 * v31 + 883 * v30 + 975 * v29 + 297 * v28 + 323 * v27 + 165 * v26 + 862 * v25 + 466 * v24 + 449 * v23 + 784 * v22 + 987 * v21 + 433 * v20 + 277 * v19 + 206 * v18 + 967 * v17 + 360 * v16 + 905 * v15 + 998 * v14 + 218 * v13 + 421 * v12 + 103 * v11 + 4 * v10 + 904 * v9 + 751 * v8 + 567 * v7 + 57 * v6 + 636 * v4 + 48 * v5 + 839 * v40 == 2005219)
solver.add(420 * v39 + 850 * v38 + 426 * v37 + 171 * v36 + 386 * v35 + 190 * v34 + 921 * v33 + 141 * v32 + 375 * v31 + 750 * v30 + 925 * v29 + 440 * v28 + 306 * v27 + 228 * v26 + 563 * v25 + 935 * v24 + 167 * v23 + 997 * v22 + 52 * v21 + 215 * v20 + 700 * v19 + 753 * v18 + 50 * v17 + 861 * v16 + 287 * v15 + 624 * v14 + 77 * v13 + 324 * v12 + 191 * v11 + 824 * v10 + 118 * v9 + 248 * v8 + 463 * v7 + 236 * v6 + 274 * v5 + 245 * v4 + 544 * v40 == 1724068)
solver.add(145 * v39 + 457 * v38 + 550 * v37 + 957 * v36 + 753 * v35 + 706 * v34 + 346 * v33 + 103 * v32 + 161 * v31 + 950 * v30 + 277 * v29 + 759 * v28 + 778 * v27 + 915 * v26 + 569 * v25 + 881 * v24 + 773 * v23 + 194 * v22 + 131 * v21 + 872 * v20 + 777 * v19 + 849 * v18 + 644 * v17 + 214 * v16 + 937 * v15 + 477 * v14 + 241 * v13 + 885 * v12 + 262 * v11 + 565 * v10 + 131 * v9 + 212 * v8 + 727 * v7 + 868 * v6 + 611 * v5 + 650 * v4 + 682 * v40 == 2241595)
solver.add(644 * v39 + 799 * v38 + 276 * v37 + 783 * v36 + 560 * v35 + 757 * v34 + 376 * v33 + 562 * v32 + 75 * v31 + 230 * v30 + 105 * v29 + 548 * v28 + 297 * v27 + 375 * v26 + 866 * v25 + 975 * v24 + 272 * v23 + 705 * v22 + 970 * v19 + 270 * v18 + 103 * v17 + 401 * v16 + 413 * v15 + 354 * v14 + 207 * v13 + 281 * v12 + 505 * v11 + 453 * v10 + 456 * v9 + 885 * v8 + 239 * v7 + 543 * v6 + 407 * v5 + 1022 * v4 + 1018 * v20 + 25 * v21 + 732 * v40 == 1971970)
solver.add(515 * v39 + 843 * v38 + 637 * v37 + 35 * v36 + 408 * v35 + 647 * v34 + 933 * v33 + 179 * v32 + 938 * v31 + 662 * v28 + 529 * v27 + 868 * v26 + 929 * v25 + 153 * v24 + 306 * v23 + 854 * v22 + 946 * v21 + 201 * v20 + 306 * v19 + 649 * v18 + 850 * v17 + 463 * v16 + 698 * v15 + 578 * v14 + 782 * v13 + 673 * v12 + 583 * v11 + 836 * v10 + 403 * v9 + 480 * v8 + 435 * v7 + 1014 * v6 + 126 * v5 + 228 * v4 + 404 * v29 + 288 * v30 + 16 * v40 == 2127896)
solver.add(414 * v37 + 392 * v36 + 250 * v35 + 749 * v34 + 317 * v33 + 618 * v32 + 733 * v31 + 826 * v30 + 799 * v29 + 391 * v26 + 473 * v25 + 882 * v24 + 211 * v23 + 558 * v22 + 594 * v21 + 831 * v20 + 920 * v19 + 1014 * v16 + 936 * v15 + 680 * v14 + 478 * v11 + 878 * v10 + 364 * v9 + 652 * v8 + 414 * v7 + 689 * v6 + 74 * v5 + 656 * v4 + 1013 * v12 + 160 * v13 + 986 * v17 + 65 * v18 + 791 * v27 + 96 * v28 + 665 * v38 + 20 * v39 + 778 * v40 == 2254533)
solver.add(103 * v39 + 986 * v38 + 16 * v37 + 972 * v36 + 307 * v35 + 272 * v34 + 473 * v33 + 812 * v32 + 517 * v31 + 453 * v30 + 147 * v29 + 103 * v28 + 61 * v27 + 920 * v26 + 378 * v25 + 767 * v24 + 302 * v23 + 669 * v22 + 965 * v21 + 527 * v20 + 573 * v19 + 173 * v18 + 136 * v17 + 100 * v16 + 315 * v15 + 948 * v14 + 565 * v13 + 745 * v12 + 117 * v11 + 669 * v10 + 680 * v9 + 155 * v8 + 679 * v7 + 519 * v4 + 499 * v5 + 768 * v6 + 696 * v40 == 1908685)
solver.add(972 * v39 + 991 * v38 + 842 * v37 + 826 * v36 + 818 * v35 + 425 * v34 + 605 * v33 + 187 * v32 + 753 * v31 + 502 * v30 + 225 * v29 + 737 * v28 + 553 * v27 + 942 * v26 + 465 * v25 + 972 * v22 + 651 * v21 + 1007 * v20 + 869 * v19 + 590 * v18 + 86 * v17 + 491 * v16 + 846 * v15 + 808 * v14 + 846 * v13 + 905 * v12 + 281 * v11 + 273 * v10 + 732 * v9 + 145 * v8 + 173 * v7 + 417 * v6 + 221 * v5 + 631 * v4 + 130 * v23 + 80 * v24 + 550 * v40 == 2282375)
solver.add(158 * v39 + 608 * v38 + 457 * v37 + 305 * v32 + 499 * v31 + 991 * v30 + 338 * v29 + 680 * v28 + 164 * v27 + 543 * v26 + 356 * v23 + 525 * v22 + 812 * v19 + 551 * v18 + 213 * v17 + 346 * v16 + 471 * v15 + 83 * v14 + 398 * v13 + 844 * v12 + 100 * v11 + 553 * v10 + 254 * v9 + 14 * v8 + 62 * v7 + 432 * v6 + 229 * v5 + 240 * v4 + 131 * v20 + 81 * v21 + 583 * v24 + 255 * v25 + 939 * v33 + 25 * v34 + 546 * v35 + 144 * v36 + 712 * v40 == 1553769)
solver.add(98 * v39 + 988 * v38 + 262 * v37 + 780 * v36 + 451 * v35 + 754 * v34 + 521 * v33 + 313 * v32 + 42 * v31 + 362 * v30 + 729 * v29 + 608 * v28 + 218 * v27 + 183 * v26 + 583 * v25 + 303 * v24 + 901 * v23 + 84 * v22 + 336 * v21 + 563 * v20 + 427 * v19 + 171 * v18 + 612 * v15 + 687 * v14 + 671 * v13 + 531 * v12 + 556 * v11 + 883 * v10 + 1004 * v9 + 342 * v8 + 536 * v7 + 532 * v6 + 259 * v5 + 138 * v4 + 172 * v16 + 20 * v17 + 242 * v40 == 1777595)
solver.add(29 * v39 + 689 * v38 + 348 * v37 + 735 * v36 + 195 * v35 + 598 * v34 + 356 * v31 + 1006 * v30 + 408 * v29 + 93 * v28 + 226 * v27 + 980 * v26 + 363 * v25 + 729 * v24 + 667 * v23 + 321 * v22 + 367 * v21 + 962 * v20 + 737 * v19 + 149 * v18 + 779 * v17 + 154 * v16 + 870 * v15 + 901 * v14 + 70 * v13 + 534 * v12 + 338 * v11 + 666 * v10 + 362 * v9 + 318 * v8 + 494 * v7 + 774 * v6 + 654 * v5 + 847 * v4 + 372 * v32 + 81 * v33 + 711 * v40 == 1987065)
solver.add(932 * v39 + 910 * v38 + 210 * v37 + 687 * v36 + 509 * v35 + 1013 * v34 + 319 * v33 + 177 * v32 + 302 * v31 + 290 * v30 + (v29 << 9) + 977 * v28 + 578 * v27 + 317 * v26 + 379 * v25 + 497 * v24 + 969 * v23 + 23 * v22 + 515 * v21 + 561 * v20 + 953 * v19 + 590 * v16 + 583 * v15 + 962 * v14 + 268 * v13 + 216 * v12 + 555 * v10 + 67 * v9 + 245 * v8 + 401 * v7 + 221 * v6 + 367 * v5 + 331 * v4 + 605 * v17 + 288 * v18 + 277 * v40 == 1845819)
solver.add(842 * v39 + 441 * v38 + 808 * v37 + 996 * v36 + 755 * v35 + 315 * v34 + (v33 << 6) + 313 * v32 + 38 * v31 + 156 * v30 + 426 * v29 + 852 * v28 + 493 * v27 + 941 * v26 + 863 * v25 + 173 * v24 + 764 * v23 + 561 * v22 + 907 * v21 + 251 * v20 + 608 * v19 + 329 * v18 + 958 * v17 + 229 * v16 + 855 * v15 + 1012 * v14 + 206 * v13 + 340 * v12 + 451 * v11 + 276 * v10 + 52 * v9 + 870 * v8 + 710 * v7 + 493 * v6 + 932 * v5 + 442 * v4 + 860 * v40 == 2145612)
solver.add(400 * v39 + 606 * v38 + 94 * v37 + 142 * v36 + 706 * v35 + 941 * v34 + 897 * v33 + 1012 * v32 + 571 * v29 + 296 * v28 + 83 * v27 + 840 * v26 + 1005 * v25 + 966 * v22 + 887 * v21 + 100 * v20 + 114 * v19 + 394 * v18 + 183 * v17 + 274 * v16 + 221 * v15 + 443 * v14 + 737 * v13 + 337 * v12 + 191 * v11 + 177 * v6 + 269 * v5 + 718 * v4 + 924 * v7 + 257 * v8 + 8 * v9 + 129 * v10 + 527 * v23 + 19 * v24 + 55 * v30 + 81 * v31 + 103 * v40 == 1623431)
solver.add(669 * v37 + 229 * v34 + 470 * v33 + 461 * v32 + 126 * v31 + 70 * v30 + 879 * v29 + 172 * v26 + 114 * v25 + 54 * v24 + 184 * v23 + 637 * v20 + 760 * v19 + 939 * v18 + 821 * v17 + 779 * v16 + 919 * v15 + 294 * v14 + 837 * v13 + 32 * v12 + 193 * v11 + 723 * v10 + 661 * v9 + 440 * v6 + 591 * v5 + 735 * v4 + 448 * v7 + 10 * v8 + 1022 * v21 + 33 * v22 + 951 * v27 + 31 * v28 + 173 * v35 + 37 * v36 + 621 * v38 + 48 * v39 + 307 * v40 == 1682810)
solver.add(508 * v39 + 843 * v38 + 450 * v37 + 996 * v36 + 709 * v35 + 111 * v34 + 755 * v33 + 389 * v32 + 828 * v31 + 707 * v30 + 791 * v29 + 159 * v28 + 669 * v27 + 618 * v26 + 954 * v25 + 199 * v24 + 157 * v23 + 828 * v22 + 796 * v19 + 202 * v18 + 148 * v15 + 969 * v14 + 649 * v13 + 149 * v12 + 332 * v11 + 913 * v10 + 234 * v9 + 535 * v8 + 133 * v7 + 339 * v6 + 241 * v5 + 320 * v4 + 682 * v16 + 129 * v17 + 302 * v20 + 129 * v21 + 685 * v40 == 1985260)
solver.add(632 * v39 + 695 * v38 + 543 * v37 + 870 * v36 + 338 * v35 + 733 * v34 + 29 * v33 + 630 * v32 + 811 * v29 + 621 * v28 + 573 * v27 + 101 * v26 + 510 * v25 + 842 * v24 + 736 * v23 + 705 * v22 + 135 * v21 + 969 * v20 + 546 * v19 + 489 * v18 + 350 * v17 + 616 * v16 + 290 * v15 + 193 * v14 + 812 * v13 + 16 * v10 + 982 * v9 + 786 * v8 + 357 * v7 + 834 * v6 + 840 * v5 + 732 * v4 + 915 * v11 + 160 * v12 + 545 * v30 + 48 * v31 + 502 * v40 == 2146635)
solver.add(165 * v39 + 416 * v38 + 869 * v37 + 472 * v36 + 940 * v35 + 206 * v34 + 973 * v33 + 229 * v32 + 728 * v31 + 341 * v30 + 557 * v29 + 185 * v28 + 495 * v27 + 219 * v26 + 476 * v25 + 465 * v24 + 613 * v23 + 428 * v22 + 944 * v21 + 826 * v20 + 830 * v19 + 371 * v18 + 725 * v17 + 1012 * v14 + 639 * v13 + 418 * v12 + 43 * v11 + 92 * v10 + 952 * v9 + 717 * v8 + 500 * v7 + 662 * v6 + 523 * v5 + 711 * v4 + 553 * v15 + 320 * v16 + 797 * v40 == 2132512)
solver.add(258 * v39 + 238 * v38 + 114 * v35 + 869 * v34 + 876 * v33 + 629 * v32 + 213 * v29 + 227 * v28 + 238 * v27 + 296 * v26 + 67 * v23 + 316 * v22 + 972 * v21 + 534 * v20 + 131 * v19 + 477 * v18 + 314 * v17 + 679 * v16 + 251 * v13 + 91 * v12 + 922 * v11 + 444 * v10 + 744 * v9 + 197 * v8 + 124 * v7 + 191 * v6 + 209 * v5 + 509 * v4 + 725 * v14 + 11 * v15 + 289 * v24 + 20 * v25 + 710 * v30 + 72 * v31 + 61 * v36 + 37 * v37 + 781 * v40 == 1445961)
solver.add(685 * v39 + 811 * v38 + 844 * v37 + 827 * v36 + 901 * v35 + 995 * v34 + 670 * v33 + 218 * v32 + 214 * v31 + 412 * v30 + 1003 * v29 + 177 * v28 + 351 * v27 + 889 * v26 + 331 * v25 + 499 * v24 + 259 * v23 + 259 * v22 + 812 * v21 + 46 * v20 + 32 * v19 + 574 * v18 + 774 * v17 + 706 * v14 + 720 * v13 + 337 * v12 + 172 * v11 + 589 * v10 + 884 * v9 + 882 * v8 + 934 * v7 + 873 * v6 + 157 * v5 + 683 * v4 + 285 * v15 + 12 * v16 + 705 * v40 == 2168618)
solver.add(391 * v39 + 771 * v38 + 590 * v37 + 874 * v36 + 699 * v35 + 571 * v34 + 16 * v33 + 323 * v32 + 890 * v31 + 355 * v30 + 536 * v29 + 46 * v28 + 551 * v27 + 659 * v26 + 74 * v25 + 905 * v24 + 441 * v23 + 884 * v22 + 493 * v21 + 461 * v20 + 707 * v19 + 142 * v18 + 596 * v17 + 376 * v16 + 667 * v15 + 337 * v14 + 116 * v13 + 878 * v12 + 290 * v11 + 84 * v10 + 304 * v9 + 540 * v8 + 18 * v6 + 376 * v4 + 858 * v5 + 72 * v7 + 894 * v40 == 1874405)
solver.add(700 * v39 + 164 * v38 + 610 * v37 + 705 * v36 + 216 * v35 + 886 * v34 + 1016 * v31 + 657 * v30 + 638 * v29 + 426 * v28 + 806 * v27 + 963 * v26 + 878 * v25 + 790 * v24 + 435 * v21 + 104 * v20 + 966 * v19 + 907 * v18 + 469 * v17 + 891 * v16 + 2 * v15 + 28 * v14 + 591 * v11 + 323 * v10 + 391 * v9 + 1018 * v8 + 971 * v7 + 748 * v6 + 681 * v5 + 855 * v4 + 533 * v12 + 7 * v13 + 1012 * v22 + 640 * v23 + 385 * v32 + 24 * v33 + 1002 * v40 == 2345980)
solver.add(982 * v39 + 764 * v38 + 502 * v37 + 686 * v36 + 269 * v35 + 1015 * v34 + 419 * v33 + 806 * v32 + 642 * v29 + 426 * v28 + 38 * v27 + 425 * v26 + 564 * v25 + 14 * v24 + 381 * v21 + 425 * v20 + 146 * v19 + 598 * v18 + 486 * v17 + 292 * v16 + 832 * v15 + 869 * v14 + 304 * v13 + 397 * v12 + 765 * v11 + 362 * v10 + 514 * v9 + 295 * v8 + 494 * v7 + 487 * v4 + 267 * v5 + 511 * v6 + 572 * v22 + 40 * v23 + 743 * v30 + 13 * v31 + 1016 * v40 == 1955765)
solver.add(233 * v39 + 839 * v38 + 225 * v37 + 688 * v36 + 433 * v35 + 859 * v34 + 989 * v33 + 331 * v32 + 866 * v31 + 364 * v28 + 345 * v27 + 321 * v26 + 373 * v25 + 949 * v24 + 539 * v23 + 360 * v22 + 206 * v21 + 921 * v20 + 957 * v19 + 168 * v18 + 496 * v17 + 393 * v16 + 154 * v15 + 456 * v14 + 844 * v13 + 797 * v12 + 30 * v11 + 698 * v10 + 198 * v9 + 568 * v8 + 406 * v7 + 390 * v6 + 723 * v5 + 102 * v4 + 591 * v29 + 7 * v30 + 423 * v40 == 1968753)
solver.add(824 * v39 + 918 * v38 + 231 * v37 + 105 * v36 + 585 * v35 + 35 * v34 + 865 * v33 + 632 * v30 + 968 * v27 + 848 * v26 + 575 * v25 + 1002 * v24 + 517 * v23 + 733 * v22 + 995 * v21 + 950 * v20 + 369 * v19 + 650 * v18 + 628 * v17 + 1020 * v16 + 724 * v15 + 89 * v14 + 660 * v13 + 518 * v12 + 191 * v11 + 726 * v10 + 350 * v9 + 719 * v8 + 333 * v7 + 196 * v6 + 263 * v5 + 513 * v4 + 410 * v28 + 257 * v29 + 635 * v31 + 72 * v32 + 582 * v40 == 2159260)
solver.add(773 * v39 + 615 * v38 + 829 * v37 + 692 * v36 + 358 * v35 + 753 * v34 + 700 * v33 + 761 * v32 + 171 * v31 + 899 * v30 + 866 * v29 + 963 * v28 + 794 * v27 + 281 * v26 + 928 * v25 + 953 * v24 + 209 * v23 + 293 * v22 + 906 * v19 + 376 * v18 + (v17 << 7) + 331 * v16 + 398 * v15 + 635 * v14 + 622 * v13 + 427 * v12 + 709 * v11 + 253 * v10 + 801 * v9 + 257 * v7 + 1016 * v5 + 621 * v4 + 76 * v6 + 81 * v8 + 976 * v20 + 320 * v21 + 606 * v40 == 2268364)
solver.add(301 * v39 + 480 * v38 + 114 * v37 + 231 * v36 + 14 * v35 + 104 * v34 + 796 * v33 + 170 * v32 + 522 * v31 + 23 * v30 + 579 * v29 + 716 * v28 + 355 * v27 + 221 * v26 + 987 * v25 + 679 * v24 + 484 * v23 + 816 * v22 + 804 * v21 + 642 * v20 + 877 * v19 + 972 * v16 + 679 * v13 + 784 * v12 + 198 * v11 + 797 * v10 + 407 * v9 + 70 * v8 + 466 * v7 + 868 * v4 + 458 * v5 + 9 * v6 + 151 * v14 + 80 * v15 + 360 * v17 + 9 * v18 + 521 * v40 == 1723452)
solver.add(694 * v38 + 702 * v37 + 990 * v36 + 785 * v35 + 421 * v34 + 490 * v33 + 532 * v32 + 923 * v31 + 189 * v30 + 51 * v29 + 809 * v28 + 982 * v27 + 186 * v24 + 890 * v23 + 183 * v22 + 162 * v21 + 311 * v20 + 490 * v19 + 831 * v18 + 89 * v17 + 527 * v16 + 151 * v15 + 629 * v14 + 734 * v13 + 371 * v12 + 1011 * v11 + 881 * v10 + 362 * v9 + 650 * v8 + 933 * v7 + 281 * v6 + 499 * v5 + 253 * v4 + 705 * v25 + 37 * v26 + 616 * v39 + 40 * v40 == 2069113)
solver.add(704 * v39 + 318 * v38 + 357 * v37 + 495 * v36 + 56 * v35 + 969 * v34 + 916 * v33 + 528 * v32 + 928 * v31 + 299 * v30 + 857 * v29 + 226 * v28 + 333 * v27 + 867 * v24 + 564 * v23 + 929 * v22 + 677 * v21 + (v20 << 9) + 120 * v19 + 719 * v18 + 475 * v17 + 439 * v16 + 533 * v15 + 609 * v14 + (v13 << 8) + 370 * v12 + 298 * v11 + 789 * v10 + 563 * v9 + 208 * v8 + 262 * v7 + 412 * v6 + 603 * v5 + 552 * v4 + 829 * v25 + 72 * v26 + 920 * v40 == 2049698)
solver.add(233 * v39 + 299 * v38 + 181 * v37 + 670 * v36 + 983 * v35 + 938 * v34 + 692 * v33 + 899 * v32 + 580 * v29 + 685 * v28 + 516 * v27 + 524 * v26 + 740 * v25 + 624 * v24 + 1020 * v23 + 835 * v22 + 325 * v21 + 163 * v20 + 609 * v19 + 1015 * v18 + 91 * v17 + 804 * v16 + 148 * v15 + 551 * v14 + 899 * v13 + 495 * v12 + 38 * v11 + 779 * v10 + 800 * v9 + 587 * v8 + 340 * v7 + 267 * v6 + 1002 * v5 + 84 * v4 + 1012 * v30 + 18 * v31 + 981 * v40 == 2273900)
solver.add(639 * v39 + 246 * v38 + 317 * v35 + 603 * v34 + 569 * v33 + 263 * v32 + 645 * v31 + 336 * v30 + 988 * v29 + 464 * v28 + 690 * v27 + 1022 * v24 + 130 * v23 + 531 * v22 + 870 * v19 + 518 * v18 + 49 * v17 + 130 * v16 + 917 * v15 + 52 * v14 + 319 * v13 + 592 * v12 + 913 * v11 + 733 * v10 + 601 * v9 + 822 * v8 + 953 * v7 + 452 * v6 + 271 * v5 + 54 * v4 + 573 * v20 + 10 * v21 + 549 * v25 + 5 * v26 + 841 * v36 + 31 * v37 + 632 * v40 == 1980079)
solver.add(713 * v39 + 311 * v38 + 838 * v37 + 131 * v36 + 626 * v33 + 1011 * v30 + 859 * v29 + 997 * v28 + 170 * v27 + 542 * v26 + 394 * v25 + 624 * v24 + 279 * v23 + 772 * v22 + 308 * v19 + 621 * v18 + 310 * v17 + 783 * v16 + 623 * v15 + 180 * v14 + 251 * v13 + 612 * v12 + 630 * v11 + 405 * v10 + 94 * v9 + 581 * v8 + 274 * v7 + 201 * v6 + 529 * v5 + 979 * v4 + 315 * v20 + 288 * v21 + 4 * v31 + 81 * v32 + 637 * v34 + 36 * v35 + 932 * v40 == 1869370)

for var in [v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29, v30, v31, v32, v33, v34, v35, v36, v37, v38, v39, v40]:
    solver.add(var >= 32, var <= 126) 

if solver.check() == sat:
    model = solver.model()
    flag = ''.join([chr(model[var].as_long()) for var in [v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29, v30, v31, v32, v33, v34, v35, v36, v37, v38, v39, v40]])
    print(flag)
